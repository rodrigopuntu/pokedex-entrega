{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\pokedex\\\\src\\\\components\\\\Pokedex\\\\Pokedex.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport { Card, Button, Container, Row, Col, Form, Pagination } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Logo from '../../images/logo.svg';\nimport GBA from '../../images/8bits.png';\nimport HD from '../../images/32bits.png';\nimport PokemonDetails from '../PokemonDetails/PokemonDetails';\nimport TypeIcon from '../TypeIcons/TypeIcons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Pokedex = () => {\n  _s();\n  const [allPokemonList, setAllPokemonList] = useState([]);\n  const [pokemonList, setPokemonList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const [showOriginalImages, setShowOriginalImages] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const itemsPerPage = 12;\n  useEffect(() => {\n    const fetchAllPokemon = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50000');\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        const allPokemon = await Promise.all(data.results.map(async pokemon => {\n          const pokemonResponse = await fetch(pokemon.url);\n          const pokemonData = await pokemonResponse.json();\n          const pokemonImageOriginal = pokemonData.sprites.front_default;\n          const imageUrl = `https://img.pokemondb.net/artwork/${pokemon.name}.jpg`;\n          const image = showOriginalImages ? pokemonImageOriginal : (await checkImageAvailability(imageUrl)) ? imageUrl : pokemonImageOriginal;\n          const noImage = 'https://r2.easyimg.io/u0k0s39qc/sticker-png-pikachu-crying-pokemon-pikachu.png';\n          return {\n            name: pokemon.name,\n            image: image ? image : noImage,\n            details: pokemonData\n          };\n        }));\n        setAllPokemonList(allPokemon);\n        const totalPokemonCount = data.count;\n        const totalPages = Math.ceil(totalPokemonCount / itemsPerPage);\n        setTotalPages(totalPages);\n      } catch (error) {\n        console.error('Error al obtener la lista completa de Pokémon', error);\n        setError('Error al obtener la lista de Pokémon. Intenta de nuevo más tarde.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllPokemon();\n  }, [showOriginalImages]);\n  const fetchFilteredPokemon = () => {\n    // Filtrar por término de búsqueda\n    const filteredBySearch = searchTerm ? allPokemonList.filter(pokemon => pokemon.name.toLowerCase().includes(searchTerm.toLowerCase())) : allPokemonList;\n\n    // Filtrar por tipos seleccionados\n    const filteredByType = selectedTypes.length > 0 ? filteredBySearch.filter(pokemon => pokemon.details.types.some(type => selectedTypes.includes(type.type.name))) : filteredBySearch;\n\n    // Calcular el rango de Pokémon a mostrar en la página actual\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const limitedPokemonList = filteredByType.slice(startIndex, endIndex);\n    setPokemonList(limitedPokemonList);\n    const totalPages = Math.ceil(filteredByType.length / itemsPerPage);\n    setTotalPages(totalPages);\n  };\n  useEffect(() => {\n    fetchFilteredPokemon();\n  }, [currentPage, searchTerm, showOriginalImages, allPokemonList, selectedTypes]);\n  const checkImageAvailability = async url => {\n    try {\n      const response = await fetch(url, {\n        method: 'HEAD'\n      });\n      return response.ok;\n    } catch (error) {\n      return false;\n    }\n  };\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => Math.min(prevPage + 1, totalPages));\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  const handlePageSelect = selectedPage => {\n    setCurrentPage(selectedPage);\n  };\n  const toggleImageType = () => {\n    setShowOriginalImages(prev => !prev);\n  };\n  const maxDisplayedPageNumbers = 5;\n  const getPageNumbers = () => {\n    const totalPageNumbers = Math.min(totalPages, maxDisplayedPageNumbers);\n    const pages = Array.from({\n      length: totalPageNumbers\n    }, (_, i) => currentPage <= Math.floor(maxDisplayedPageNumbers / 2) ? i + 1 : currentPage >= totalPages - Math.floor(maxDisplayedPageNumbers / 2) ? totalPages - totalPageNumbers + i + 1 : currentPage - Math.floor(maxDisplayedPageNumbers / 2) + i);\n    return pages;\n  };\n  const handleTypeSelect = type => {\n    if (selectedTypes.includes(type)) {\n      setSelectedTypes(prevTypes => prevTypes.filter(prevType => prevType !== type));\n    } else {\n      setSelectedTypes(prevTypes => [...prevTypes, type]);\n    }\n  };\n  const getAllPokemonTypes = () => {\n    // Obten todos los tipos únicos de Pokémon de la lista completa\n    const allTypes = allPokemonList.flatMap(pokemon => pokemon.details.types.map(type => type.type.name)).filter((value, index, self) => self.indexOf(value) === index);\n    return allTypes;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-3 pokedex-container d-flex flex-wrap\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poke-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"poke-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\",\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"search-bar\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Buscar Pok\\xE9mon\",\n                value: searchTerm,\n                onChange: e => setSearchTerm(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => setSelectedTypes([]),\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), getAllPokemonTypes().map(type => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedTypes.includes(type) ? \"danger\" : \"warning\",\n            onClick: () => handleTypeSelect(type),\n            style: {\n              transition: 'background-color 0.3s ease'\n            },\n            children: /*#__PURE__*/_jsxDEV(TypeIcon, {\n              type: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 8,\n            className: \"my-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"buttonImages\",\n              variant: \"none\",\n              onClick: toggleImageType,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showOriginalImages ? HD : GBA,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokedex-card-container\",\n          children: pokemonList.map((pokemon, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 3,\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"pokemon-card\",\n              onMouseEnter: e => e.currentTarget.style.transform = 'scale(1.05)',\n              onMouseLeave: e => e.currentTarget.style.transform = 'scale(1)',\n              style: {\n                transition: 'transform 0.3s ease'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: pokemon.image,\n                alt: pokemon.name,\n                className: `pokemon-image ${showOriginalImages ? 'original-image' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: pokemon.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/pokemon/${pokemon.name}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    children: \"Ver Detalles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/pokemon/:name\",\n            component: PokemonDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n              onClick: handlePrevPage,\n              disabled: currentPage === 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), getPageNumbers().map(page => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n              active: page === currentPage,\n              onClick: () => handlePageSelect(page),\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n              onClick: handleNextPage,\n              disabled: currentPage === totalPages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Pokedex, \"1WeEgRfNW9VA+EHUJ3QTx8TlUGc=\");\n_c = Pokedex;\nexport default Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","useEffect","useState","Link","Switch","Route","Card","Button","Container","Row","Col","Form","Pagination","Logo","GBA","HD","PokemonDetails","TypeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Pokedex","_s","allPokemonList","setAllPokemonList","pokemonList","setPokemonList","searchTerm","setSearchTerm","currentPage","setCurrentPage","totalPages","setTotalPages","selectedTypes","setSelectedTypes","showOriginalImages","setShowOriginalImages","loading","setLoading","error","setError","itemsPerPage","fetchAllPokemon","response","fetch","ok","Error","data","json","allPokemon","Promise","all","results","map","pokemon","pokemonResponse","url","pokemonData","pokemonImageOriginal","sprites","front_default","imageUrl","name","image","checkImageAvailability","noImage","details","totalPokemonCount","count","Math","ceil","console","fetchFilteredPokemon","filteredBySearch","filter","toLowerCase","includes","filteredByType","length","types","some","type","startIndex","endIndex","limitedPokemonList","slice","method","handleNextPage","prevPage","min","handlePrevPage","max","handlePageSelect","selectedPage","toggleImageType","prev","maxDisplayedPageNumbers","getPageNumbers","totalPageNumbers","pages","Array","from","_","i","floor","handleTypeSelect","prevTypes","prevType","getAllPokemonTypes","allTypes","flatMap","value","index","self","indexOf","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","Control","placeholder","onChange","e","target","variant","onClick","style","transition","sm","lg","onMouseEnter","currentTarget","transform","onMouseLeave","Img","Body","Title","to","path","component","Prev","disabled","page","Item","active","Next","_c","$RefreshReg$"],"sources":["C:/Users/rodri/Desktop/pokedex/src/components/Pokedex/Pokedex.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport { Card, Button, Container, Row, Col, Form, Pagination } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Logo from '../../images/logo.svg';\r\nimport GBA from '../../images/8bits.png';\r\nimport HD from '../../images/32bits.png';\r\nimport PokemonDetails from '../PokemonDetails/PokemonDetails';\r\nimport TypeIcon from '../TypeIcons/TypeIcons';\r\n\r\nconst Pokedex = () => {\r\n  const [allPokemonList, setAllPokemonList] = useState([]);\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [selectedTypes, setSelectedTypes] = useState([]);\r\n  const [showOriginalImages, setShowOriginalImages] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const itemsPerPage = 12;\r\n\r\n  useEffect(() => {\r\n    const fetchAllPokemon = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50000');\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        \r\n        const data = await response.json();\r\n        const allPokemon = await Promise.all(data.results.map(async (pokemon) => {\r\n          const pokemonResponse = await fetch(pokemon.url);\r\n          const pokemonData = await pokemonResponse.json();\r\n          const pokemonImageOriginal = pokemonData.sprites.front_default;\r\n          const imageUrl = `https://img.pokemondb.net/artwork/${pokemon.name}.jpg`;\r\n          const image = showOriginalImages\r\n            ? pokemonImageOriginal\r\n            : await checkImageAvailability(imageUrl)\r\n              ? imageUrl\r\n              : pokemonImageOriginal;\r\n          \r\n          const noImage = 'https://r2.easyimg.io/u0k0s39qc/sticker-png-pikachu-crying-pokemon-pikachu.png';\r\n\r\n          return {\r\n            name: pokemon.name,\r\n            image: image ? image : noImage,\r\n            details: pokemonData,\r\n          };\r\n        }));\r\n\r\n        setAllPokemonList(allPokemon);\r\n        const totalPokemonCount = data.count;\r\n        const totalPages = Math.ceil(totalPokemonCount / itemsPerPage);\r\n        setTotalPages(totalPages);\r\n      } catch (error) {\r\n        console.error('Error al obtener la lista completa de Pokémon', error);\r\n        setError('Error al obtener la lista de Pokémon. Intenta de nuevo más tarde.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllPokemon();\r\n  }, [showOriginalImages]);\r\n\r\n  const fetchFilteredPokemon = () => {\r\n    // Filtrar por término de búsqueda\r\n    const filteredBySearch = searchTerm\r\n      ? allPokemonList.filter((pokemon) => pokemon.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      : allPokemonList;\r\n\r\n    // Filtrar por tipos seleccionados\r\n    const filteredByType = selectedTypes.length > 0\r\n      ? filteredBySearch.filter((pokemon) => pokemon.details.types.some((type) => selectedTypes.includes(type.type.name)))\r\n      : filteredBySearch;\r\n\r\n    // Calcular el rango de Pokémon a mostrar en la página actual\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    const limitedPokemonList = filteredByType.slice(startIndex, endIndex);\r\n\r\n    setPokemonList(limitedPokemonList);\r\n    const totalPages = Math.ceil(filteredByType.length / itemsPerPage);\r\n    setTotalPages(totalPages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFilteredPokemon();\r\n  }, [currentPage, searchTerm, showOriginalImages, allPokemonList, selectedTypes]);\r\n\r\n  const checkImageAvailability = async (url) => {\r\n    try {\r\n      const response = await fetch(url, { method: 'HEAD' });\r\n      return response.ok;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages));\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  const handlePageSelect = (selectedPage) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n\r\n  const toggleImageType = () => {\r\n    setShowOriginalImages((prev) => !prev);\r\n  };\r\n\r\n  const maxDisplayedPageNumbers = 5;\r\n\r\n  const getPageNumbers = () => {\r\n    const totalPageNumbers = Math.min(totalPages, maxDisplayedPageNumbers);\r\n    const pages = Array.from({ length: totalPageNumbers }, (_, i) =>\r\n      currentPage <= Math.floor(maxDisplayedPageNumbers / 2)\r\n        ? i + 1\r\n        : currentPage >= totalPages - Math.floor(maxDisplayedPageNumbers / 2)\r\n        ? totalPages - totalPageNumbers + i + 1\r\n        : currentPage - Math.floor(maxDisplayedPageNumbers / 2) + i\r\n    );\r\n    return pages;\r\n  };\r\n\r\n  const handleTypeSelect = (type) => {\r\n    if (selectedTypes.includes(type)) {\r\n      setSelectedTypes((prevTypes) => prevTypes.filter((prevType) => prevType !== type));\r\n    } else {\r\n      setSelectedTypes((prevTypes) => [...prevTypes, type]);\r\n    }\r\n  };\r\n\r\n  const getAllPokemonTypes = () => {\r\n    // Obten todos los tipos únicos de Pokémon de la lista completa\r\n    const allTypes = allPokemonList\r\n      .flatMap((pokemon) => pokemon.details.types.map((type) => type.type.name))\r\n      .filter((value, index, self) => self.indexOf(value) === index);\r\n    return allTypes;\r\n  };\r\n\r\n  return (\r\n    <div className='my-3 pokedex-container d-flex flex-wrap'>\r\n      <Container className=\"my-2\">\r\n        <div className='poke-logo'>\r\n          <img src={Logo} alt=\"poke-logo\" />\r\n        </div>\r\n\r\n        {loading && <div className=\"loading-screen\">Cargando...</div>}\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        {!loading && !error && (\r\n          <>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12} md={8}>\r\n                <Form className=\"search-bar\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar Pokémon\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className=\"filter-buttons\">\r\n              <Button variant=\"warning\" onClick={() => setSelectedTypes([])}>\r\n                Todos\r\n              </Button>\r\n              {getAllPokemonTypes().map((type) => (\r\n                <Button\r\n                  key={type}\r\n                  variant={selectedTypes.includes(type) ? \"danger\" : \"warning\"}\r\n                  onClick={() => handleTypeSelect(type)}\r\n                  style={{ transition: 'background-color 0.3s ease' }}\r\n                >\r\n                  <TypeIcon type={type} />\r\n                </Button>\r\n              ))}\r\n            </div>\r\n\r\n            <Row className=\"justify-content-center align-items-center\">\r\n              <Col xs={12} md={8} className=\"my-3 text-center\">\r\n                <Button className='buttonImages' variant='none' onClick={toggleImageType}>\r\n                  <img src={showOriginalImages ? HD : GBA} alt=\"\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className='pokedex-card-container'>\r\n              {pokemonList.map((pokemon, index) => (\r\n                <Col key={index} xs={12} sm={6} md={4} lg={3} className=\"my-3\">\r\n                  <Card\r\n                    className=\"pokemon-card\"\r\n                    onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.05)'}\r\n                    onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}\r\n                    style={{ transition: 'transform 0.3s ease' }}\r\n                  >\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={pokemon.image}\r\n                      alt={pokemon.name}\r\n                      className={`pokemon-image ${showOriginalImages ? 'original-image' : ''}`}\r\n                    />\r\n                    <Card.Body className=\"text-center\">\r\n                      <Card.Title>{pokemon.name}</Card.Title>\r\n                      <Link to={`/pokemon/${pokemon.name}`}>\r\n                        <Button variant=\"danger\">Ver Detalles</Button>\r\n                      </Link>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </div>\r\n\r\n            <Switch>\r\n              <Route path=\"/pokemon/:name\" component={PokemonDetails} />\r\n            </Switch>\r\n\r\n            <div className=\"pagination-container\">\r\n              <Pagination>\r\n                <Pagination.Prev onClick={handlePrevPage} disabled={currentPage === 1} />\r\n                {getPageNumbers().map((page) => (\r\n                  <Pagination.Item\r\n                    key={page}\r\n                    active={page === currentPage}\r\n                    onClick={() => handlePageSelect(page)}\r\n                  >\r\n                    {page}\r\n                  </Pagination.Item>\r\n                ))}\r\n                <Pagination.Next onClick={handleNextPage} disabled={currentPage === totalPages} />\r\n              </Pagination>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}