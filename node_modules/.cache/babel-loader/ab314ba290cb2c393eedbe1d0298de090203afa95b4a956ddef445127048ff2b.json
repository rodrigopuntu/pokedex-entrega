{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\pokedex\\\\src\\\\components\\\\TypeIcons\\\\TypeIcons.jsx\";\nimport React from 'react';\nimport Fuego from '../../images/fire.png';\nimport Agua from '../../images/water.png';\nimport Planta from '../../images/grass.png';\nimport Bug from '../../images/bug.png';\nimport Dark from '../../images/dark.png';\nimport Dragon from '../../images/dragon.png';\nimport Electric from '../../images/electric.png';\nimport Fairy from '../../images/fairy.png';\nimport Fighthing from '../../images/fighthing.png';\nimport Flying from '../../images/flying.png';\nimport Ghost from '../../images/ghost.png';\nimport Ground from '../../images/ground.png';\nimport Ice from '../../images/ice.png';\nimport Normal from '../../images/normal.png';\nimport Poison from '../../images/poison.png';\nimport Psychic from '../../images/psychic.png';\nimport Rock from '../../images/rock.png';\nimport Steel from '../../images/steel.png';\nimport '../Pokedex/Pokedex.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeIcon = ({\n  type\n}) => {\n  let typeImage;\n  switch (type) {\n    case 'fire':\n      typeImage = Fuego;\n      break;\n    case 'water':\n      typeImage = Agua;\n      break;\n    case 'grass':\n      typeImage = Planta;\n      break;\n    case 'bug':\n      typeImage = Bug;\n      break;\n    case 'dark':\n      typeImage = Dark;\n      break;\n    case 'dragon':\n      typeImage = Dragon;\n      break;\n    case 'electric':\n      typeImage = Electric;\n      break;\n    case 'fairy':\n      typeImage = Fairy;\n      break;\n    case \"fighting\":\n      typeImage = Fighthing;\n      break;\n    case 'flying':\n      typeImage = Flying;\n      break;\n    case 'ghost':\n      typeImage = Ghost;\n      break;\n    case 'ground':\n      typeImage = Ground;\n      break;\n    case 'ice':\n      typeImage = Ice;\n      break;\n    case 'normal':\n      typeImage = Normal;\n      break;\n    case 'poison':\n      typeImage = Poison;\n      break;\n    case 'psychic':\n      typeImage = Psychic;\n      break;\n    case 'rock':\n      typeImage = Rock;\n      break;\n    case 'steel':\n      typeImage = Steel;\n      break;\n    default:\n      typeImage = null;\n  }\n\n  // Renderiza la imagen\n  return typeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n    src: typeImage,\n    alt: type,\n    className: \"type-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 25\n  }, this);\n};\n_c = TypeIcon;\nexport default TypeIcon;\nvar _c;\n$RefreshReg$(_c, \"TypeIcon\");","map":{"version":3,"names":["React","Fuego","Agua","Planta","Bug","Dark","Dragon","Electric","Fairy","Fighthing","Flying","Ghost","Ground","Ice","Normal","Poison","Psychic","Rock","Steel","jsxDEV","_jsxDEV","TypeIcon","type","typeImage","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rodri/Desktop/pokedex/src/components/TypeIcons/TypeIcons.jsx"],"sourcesContent":["import React from 'react';\r\nimport Fuego from '../../images/fire.png';\r\nimport Agua from '../../images/water.png';\r\nimport Planta from '../../images/grass.png';\r\nimport Bug from '../../images/bug.png';\r\nimport Dark from '../../images/dark.png';\r\nimport Dragon from '../../images/dragon.png';\r\nimport Electric from '../../images/electric.png';\r\nimport Fairy from '../../images/fairy.png';\r\nimport Fighthing from '../../images/fighthing.png';\r\nimport Flying from '../../images/flying.png';\r\nimport Ghost from '../../images/ghost.png';\r\nimport Ground from '../../images/ground.png';\r\nimport Ice from '../../images/ice.png';\r\nimport Normal from '../../images/normal.png';\r\nimport Poison from '../../images/poison.png';\r\nimport Psychic from '../../images/psychic.png';\r\nimport Rock from '../../images/rock.png';\r\nimport Steel from '../../images/steel.png';\r\nimport '../Pokedex/Pokedex.css'\r\n\r\nconst TypeIcon = ({ type }) => {\r\n    let typeImage;\r\n    switch (type) {\r\n        case 'fire':\r\n            typeImage = Fuego;\r\n            break;\r\n        case 'water':\r\n            typeImage = Agua;\r\n            break;\r\n        case 'grass':\r\n            typeImage = Planta;\r\n            break;\r\n        case 'bug':\r\n            typeImage = Bug;\r\n            break;\r\n        case 'dark':\r\n            typeImage = Dark;\r\n            break;\r\n        case 'dragon':\r\n            typeImage = Dragon;\r\n            break;\r\n        case 'electric':\r\n            typeImage = Electric;\r\n            break;\r\n        case 'fairy':\r\n            typeImage = Fairy;\r\n            break;\r\n        case \"fighting\":\r\n            typeImage = Fighthing;\r\n            break;\r\n        case 'flying':\r\n            typeImage = Flying;\r\n            break;\r\n        case 'ghost':\r\n            typeImage = Ghost;\r\n            break;\r\n        case 'ground':\r\n            typeImage = Ground;\r\n            break;\r\n        case 'ice':\r\n            typeImage = Ice;\r\n            break;\r\n        case 'normal':\r\n            typeImage = Normal;\r\n            break;\r\n        case 'poison':\r\n            typeImage = Poison;\r\n            break;\r\n        case 'psychic':\r\n            typeImage = Psychic;\r\n            break;\r\n        case 'rock':\r\n            typeImage = Rock;\r\n            break;\r\n        case 'steel':\r\n            typeImage = Steel;\r\n            break;\r\n        default:\r\n            typeImage = null;\r\n    }\r\n\r\n    // Renderiza la imagen\r\n    return typeImage && <img src={typeImage} alt={type} className=\"type-icon\" />;\r\n};\r\n\r\nexport default TypeIcon;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,GAAG,MAAM,sBAAsB;AACtC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,GAAG,MAAM,sBAAsB;AACtC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC3B,IAAIC,SAAS;EACb,QAAQD,IAAI;IACR,KAAK,MAAM;MACPC,SAAS,GAAGtB,KAAK;MACjB;IACJ,KAAK,OAAO;MACRsB,SAAS,GAAGrB,IAAI;MAChB;IACJ,KAAK,OAAO;MACRqB,SAAS,GAAGpB,MAAM;MAClB;IACJ,KAAK,KAAK;MACNoB,SAAS,GAAGnB,GAAG;MACf;IACJ,KAAK,MAAM;MACPmB,SAAS,GAAGlB,IAAI;MAChB;IACJ,KAAK,QAAQ;MACTkB,SAAS,GAAGjB,MAAM;MAClB;IACJ,KAAK,UAAU;MACXiB,SAAS,GAAGhB,QAAQ;MACpB;IACJ,KAAK,OAAO;MACRgB,SAAS,GAAGf,KAAK;MACjB;IACJ,KAAK,UAAU;MACXe,SAAS,GAAGd,SAAS;MACrB;IACJ,KAAK,QAAQ;MACTc,SAAS,GAAGb,MAAM;MAClB;IACJ,KAAK,OAAO;MACRa,SAAS,GAAGZ,KAAK;MACjB;IACJ,KAAK,QAAQ;MACTY,SAAS,GAAGX,MAAM;MAClB;IACJ,KAAK,KAAK;MACNW,SAAS,GAAGV,GAAG;MACf;IACJ,KAAK,QAAQ;MACTU,SAAS,GAAGT,MAAM;MAClB;IACJ,KAAK,QAAQ;MACTS,SAAS,GAAGR,MAAM;MAClB;IACJ,KAAK,SAAS;MACVQ,SAAS,GAAGP,OAAO;MACnB;IACJ,KAAK,MAAM;MACPO,SAAS,GAAGN,IAAI;MAChB;IACJ,KAAK,OAAO;MACRM,SAAS,GAAGL,KAAK;MACjB;IACJ;MACIK,SAAS,GAAG,IAAI;EACxB;;EAEA;EACA,OAAOA,SAAS,iBAAIH,OAAA;IAAKI,GAAG,EAAED,SAAU;IAACE,GAAG,EAAEH,IAAK;IAACI,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChF,CAAC;AAACC,EAAA,GA/DIV,QAAQ;AAiEd,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}